

================================================================
== Vitis HLS Report for 'matrixmul'
================================================================
* Date:           Sun Mar 12 17:10:49 2023

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)
* Project:        matrixmul_prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu50-fsvh2104-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  13.33 ns|  1.663 ns|     3.60 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      160|      160|  2.133 us|  2.133 us|  161|  161|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------+---------+---------+----------+-----------+-----------+------+----------+
        |              |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Row         |      159|      159|        53|          -|          -|     3|        no|
        | + Col        |       51|       51|        17|          -|          -|     3|        no|
        |  ++ Product  |       15|       15|         5|          -|          -|     3|        no|
        +--------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 3 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 4 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.38>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 9 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%spectopmodule_ln48 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [matrixmul.cpp:48]   --->   Operation 10 'spectopmodule' 'spectopmodule_ln48' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %a, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 11 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %a"   --->   Operation 12 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %b, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 13 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %b"   --->   Operation 14 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %res, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 15 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %res"   --->   Operation 16 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.38ns)   --->   "%store_ln54 = store i2 0, i2 %i" [matrixmul.cpp:54]   --->   Operation 17 'store' 'store_ln54' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%br_ln54 = br void %Col" [matrixmul.cpp:54]   --->   Operation 18 'br' 'br_ln54' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 0.70>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%i_1 = load i2 %i" [matrixmul.cpp:54]   --->   Operation 19 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln62 = zext i2 %i_1" [matrixmul.cpp:62]   --->   Operation 20 'zext' 'zext_ln62' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i2.i2, i2 %i_1, i2 0" [matrixmul.cpp:62]   --->   Operation 21 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.70ns)   --->   "%sub_ln62 = sub i4 %tmp, i4 %zext_ln62" [matrixmul.cpp:62]   --->   Operation 22 'sub' 'sub_ln62' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.34ns)   --->   "%icmp_ln54 = icmp_eq  i2 %i_1, i2 3" [matrixmul.cpp:54]   --->   Operation 23 'icmp' 'icmp_ln54' <Predicate = true> <Delay = 0.34> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 3, i64 3, i64 3"   --->   Operation 24 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.43ns)   --->   "%add_ln54 = add i2 %i_1, i2 1" [matrixmul.cpp:54]   --->   Operation 25 'add' 'add_ln54' <Predicate = true> <Delay = 0.43> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln54 = br i1 %icmp_ln54, void %Col.split, void %for.end31" [matrixmul.cpp:54]   --->   Operation 26 'br' 'br_ln54' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%specloopname_ln54 = specloopname void @_ssdm_op_SpecLoopName, void @empty_4" [matrixmul.cpp:54]   --->   Operation 27 'specloopname' 'specloopname_ln54' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.38ns)   --->   "%br_ln57 = br void %Product" [matrixmul.cpp:57]   --->   Operation 28 'br' 'br_ln57' <Predicate = (!icmp_ln54)> <Delay = 0.38>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%ret_ln67 = ret" [matrixmul.cpp:67]   --->   Operation 29 'ret' 'ret_ln67' <Predicate = (icmp_ln54)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.73>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%j = phi i2 %add_ln57, void %for.inc26, i2 0, void %Col.split" [matrixmul.cpp:57]   --->   Operation 30 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln58 = zext i2 %j" [matrixmul.cpp:58]   --->   Operation 31 'zext' 'zext_ln58' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.70ns)   --->   "%add_ln58 = add i4 %sub_ln62, i4 %zext_ln58" [matrixmul.cpp:58]   --->   Operation 32 'add' 'add_ln58' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln58_1 = zext i4 %add_ln58" [matrixmul.cpp:58]   --->   Operation 33 'zext' 'zext_ln58_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%res_addr = getelementptr i16 %res, i64 0, i64 %zext_ln58_1" [matrixmul.cpp:58]   --->   Operation 34 'getelementptr' 'res_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.34ns)   --->   "%icmp_ln57 = icmp_eq  i2 %j, i2 3" [matrixmul.cpp:57]   --->   Operation 35 'icmp' 'icmp_ln57' <Predicate = true> <Delay = 0.34> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%empty_8 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 3, i64 3, i64 3"   --->   Operation 36 'speclooptripcount' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.43ns)   --->   "%add_ln57 = add i2 %j, i2 1" [matrixmul.cpp:57]   --->   Operation 37 'add' 'add_ln57' <Predicate = true> <Delay = 0.43> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%br_ln57 = br i1 %icmp_ln57, void %Product.split, void %for.inc29" [matrixmul.cpp:57]   --->   Operation 38 'br' 'br_ln57' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%specloopname_ln57 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [matrixmul.cpp:57]   --->   Operation 39 'specloopname' 'specloopname_ln57' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.38ns)   --->   "%br_ln61 = br void %for.inc" [matrixmul.cpp:61]   --->   Operation 40 'br' 'br_ln61' <Predicate = (!icmp_ln57)> <Delay = 0.38>
ST_3 : Operation 41 [1/1] (0.38ns)   --->   "%store_ln54 = store i2 %add_ln54, i2 %i" [matrixmul.cpp:54]   --->   Operation 41 'store' 'store_ln54' <Predicate = (icmp_ln57)> <Delay = 0.38>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%br_ln54 = br void %Col" [matrixmul.cpp:54]   --->   Operation 42 'br' 'br_ln54' <Predicate = (icmp_ln57)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 1.37>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%k = phi i2 %add_ln61, void %for.inc.split, i2 0, void %Product.split" [matrixmul.cpp:61]   --->   Operation 43 'phi' 'k' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%empty_9 = phi i16 %add_ln62, void %for.inc.split, i16 0, void %Product.split" [matrixmul.cpp:62]   --->   Operation 44 'phi' 'empty_9' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln62_1 = zext i2 %k" [matrixmul.cpp:62]   --->   Operation 45 'zext' 'zext_ln62_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (0.70ns)   --->   "%add_ln62_1 = add i4 %sub_ln62, i4 %zext_ln62_1" [matrixmul.cpp:62]   --->   Operation 46 'add' 'add_ln62_1' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln62_2 = zext i4 %add_ln62_1" [matrixmul.cpp:62]   --->   Operation 47 'zext' 'zext_ln62_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%a_addr = getelementptr i8 %a, i64 0, i64 %zext_ln62_2" [matrixmul.cpp:62]   --->   Operation 48 'getelementptr' 'a_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_1 = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i2.i2, i2 %k, i2 0" [matrixmul.cpp:62]   --->   Operation 49 'bitconcatenate' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln62_1 = sub i4 %tmp_1, i4 %zext_ln62_1" [matrixmul.cpp:62]   --->   Operation 50 'sub' 'sub_ln62_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 51 [1/1] (0.37ns) (root node of TernaryAdder)   --->   "%add_ln62_2 = add i4 %sub_ln62_1, i4 %zext_ln58" [matrixmul.cpp:62]   --->   Operation 51 'add' 'add_ln62_2' <Predicate = true> <Delay = 0.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln62_3 = zext i4 %add_ln62_2" [matrixmul.cpp:62]   --->   Operation 52 'zext' 'zext_ln62_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%b_addr = getelementptr i8 %b, i64 0, i64 %zext_ln62_3" [matrixmul.cpp:62]   --->   Operation 53 'getelementptr' 'b_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.34ns)   --->   "%icmp_ln61 = icmp_eq  i2 %k, i2 3" [matrixmul.cpp:61]   --->   Operation 54 'icmp' 'icmp_ln61' <Predicate = true> <Delay = 0.34> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%empty_10 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 3, i64 3, i64 3"   --->   Operation 55 'speclooptripcount' 'empty_10' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.43ns)   --->   "%add_ln61 = add i2 %k, i2 1" [matrixmul.cpp:61]   --->   Operation 56 'add' 'add_ln61' <Predicate = true> <Delay = 0.43> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%br_ln61 = br i1 %icmp_ln61, void %for.inc.split, void %for.inc26" [matrixmul.cpp:61]   --->   Operation 57 'br' 'br_ln61' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 58 [2/2] (0.66ns)   --->   "%a_load = load i4 %a_addr" [matrixmul.cpp:62]   --->   Operation 58 'load' 'a_load' <Predicate = (!icmp_ln61)> <Delay = 0.66> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9> <RAM>
ST_4 : Operation 59 [2/2] (0.66ns)   --->   "%b_load = load i4 %b_addr" [matrixmul.cpp:62]   --->   Operation 59 'load' 'b_load' <Predicate = (!icmp_ln61)> <Delay = 0.66> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9> <RAM>
ST_4 : Operation 60 [1/1] (0.68ns)   --->   "%store_ln62 = store i16 %empty_9, i4 %res_addr" [matrixmul.cpp:62]   --->   Operation 60 'store' 'store_ln62' <Predicate = (icmp_ln61)> <Delay = 0.68> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.68> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%br_ln57 = br void %Product" [matrixmul.cpp:57]   --->   Operation 61 'br' 'br_ln57' <Predicate = (icmp_ln61)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 1.66>
ST_5 : Operation 62 [1/2] (0.66ns)   --->   "%a_load = load i4 %a_addr" [matrixmul.cpp:62]   --->   Operation 62 'load' 'a_load' <Predicate = true> <Delay = 0.66> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9> <RAM>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%sext_ln62 = sext i8 %a_load" [matrixmul.cpp:62]   --->   Operation 63 'sext' 'sext_ln62' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 64 [1/2] (0.66ns)   --->   "%b_load = load i4 %b_addr" [matrixmul.cpp:62]   --->   Operation 64 'load' 'b_load' <Predicate = true> <Delay = 0.66> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9> <RAM>
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%sext_ln62_1 = sext i8 %b_load" [matrixmul.cpp:62]   --->   Operation 65 'sext' 'sext_ln62_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 66 [3/3] (0.99ns) (grouped into DSP with root node add_ln62)   --->   "%mul_ln62 = mul i16 %sext_ln62_1, i16 %sext_ln62" [matrixmul.cpp:62]   --->   Operation 66 'mul' 'mul_ln62' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 6 <SV = 5> <Delay = 0.99>
ST_6 : Operation 67 [2/3] (0.99ns) (grouped into DSP with root node add_ln62)   --->   "%mul_ln62 = mul i16 %sext_ln62_1, i16 %sext_ln62" [matrixmul.cpp:62]   --->   Operation 67 'mul' 'mul_ln62' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 7 <SV = 6> <Delay = 0.64>
ST_7 : Operation 68 [1/3] (0.00ns) (grouped into DSP with root node add_ln62)   --->   "%mul_ln62 = mul i16 %sext_ln62_1, i16 %sext_ln62" [matrixmul.cpp:62]   --->   Operation 68 'mul' 'mul_ln62' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 69 [2/2] (0.64ns) (root node of the DSP)   --->   "%add_ln62 = add i16 %mul_ln62, i16 %empty_9" [matrixmul.cpp:62]   --->   Operation 69 'add' 'add_ln62' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 8 <SV = 7> <Delay = 0.64>
ST_8 : Operation 70 [1/1] (0.00ns)   --->   "%specloopname_ln61 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [matrixmul.cpp:61]   --->   Operation 70 'specloopname' 'specloopname_ln61' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 71 [1/2] (0.64ns) (root node of the DSP)   --->   "%add_ln62 = add i16 %mul_ln62, i16 %empty_9" [matrixmul.cpp:62]   --->   Operation 71 'add' 'add_ln62' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 72 [1/1] (0.00ns)   --->   "%br_ln61 = br void %for.inc" [matrixmul.cpp:61]   --->   Operation 72 'br' 'br_ln61' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 13.3ns, clock uncertainty: 3.6ns.

 <State 1>: 0.387ns
The critical path consists of the following:
	'alloca' operation ('i') [4]  (0 ns)
	'store' operation ('store_ln54', matrixmul.cpp:54) of constant 0 on local variable 'i' [12]  (0.387 ns)

 <State 2>: 0.708ns
The critical path consists of the following:
	'load' operation ('i', matrixmul.cpp:54) on local variable 'i' [15]  (0 ns)
	'sub' operation ('sub_ln62', matrixmul.cpp:62) [18]  (0.708 ns)

 <State 3>: 0.73ns
The critical path consists of the following:
	'phi' operation ('j', matrixmul.cpp:57) with incoming values : ('add_ln57', matrixmul.cpp:57) [27]  (0 ns)
	'add' operation ('add_ln58', matrixmul.cpp:58) [29]  (0.708 ns)
	blocking operation 0.022 ns on control path)

 <State 4>: 1.38ns
The critical path consists of the following:
	'phi' operation ('k', matrixmul.cpp:61) with incoming values : ('add_ln61', matrixmul.cpp:61) [40]  (0 ns)
	'add' operation ('add_ln62_1', matrixmul.cpp:62) [43]  (0.708 ns)
	'getelementptr' operation ('a_addr', matrixmul.cpp:62) [45]  (0 ns)
	'load' operation ('a_load', matrixmul.cpp:62) on array 'a' [57]  (0.667 ns)

 <State 5>: 1.66ns
The critical path consists of the following:
	'load' operation ('a_load', matrixmul.cpp:62) on array 'a' [57]  (0.667 ns)
	'mul' operation of DSP[62] ('mul_ln62', matrixmul.cpp:62) [61]  (0.996 ns)

 <State 6>: 0.996ns
The critical path consists of the following:
	'mul' operation of DSP[62] ('mul_ln62', matrixmul.cpp:62) [61]  (0.996 ns)

 <State 7>: 0.645ns
The critical path consists of the following:
	'mul' operation of DSP[62] ('mul_ln62', matrixmul.cpp:62) [61]  (0 ns)
	'add' operation of DSP[62] ('add_ln62', matrixmul.cpp:62) [62]  (0.645 ns)

 <State 8>: 0.645ns
The critical path consists of the following:
	'add' operation of DSP[62] ('add_ln62', matrixmul.cpp:62) [62]  (0.645 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
